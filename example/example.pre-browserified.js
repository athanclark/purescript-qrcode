// Generated by psc-bundle 0.10.7
var PS = {};
(function(exports) {
    "use strict";

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {exports.mkEffFn1 = function mkEffFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Function.Eff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["mkEffFn1"] = $foreign.mkEffFn1;
  exports["runEffFn3"] = $foreign.runEffFn3;
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadZero = PS["Control.MonadZero"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Ord = PS["Data.Ord"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Apply = PS["Control.Apply"];
  var Control_Applicative = PS["Control.Applicative"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Data_Semigroup = PS["Data.Semigroup"];
  var Data_Ordering = PS["Data.Ordering"];
  var Data_Bounded = PS["Data.Bounded"];
  var Data_Show = PS["Data.Show"];
  var Data_Unit = PS["Data.Unit"];
  var Data_Function = PS["Data.Function"];
  var Control_Category = PS["Control.Category"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
    "use strict";        

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Function_Uncurried = PS["Data.Function.Uncurried"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Show = PS["Data.Show"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];
  var Data_Eq = PS["Data.Eq"];
  var Data_Ord = PS["Data.Ord"];                                        
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
    "use strict";

  exports.theCanvas = document.getElementById('qr');
})(PS["Main"] = PS["Main"] || {});
(function(exports) {
    "use strict";
  var QRCode =require("qrcode"); 

  exports.toCanvasImpl = function toCanvasImpl (canvas,qrString,handle) {
    QRCode.toCanvas(canvas,qrString,function(e) {
      if (e) {
        handle(JSON.stringify(e));
      } else {
        handle(null);
      }
    });
  };
})(PS["QRCode"] = PS["QRCode"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["QRCode"];
  var Prelude = PS["Prelude"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Function = PS["Data.Function"];
  var Control_Semigroupoid = PS["Control.Semigroupoid"];        
  var toCanvas = function (v) {
      return Data_Function_Eff.runEffFn3($foreign.toCanvasImpl)(v.canvas)(v.qrString)(Data_Function_Eff.mkEffFn1(function ($5) {
          return v.handle(Data_Nullable.toMaybe($5));
      }));
  };
  exports["toCanvas"] = toCanvas;
})(PS["QRCode"] = PS["QRCode"] || {});
(function(exports) {
  // Generated by psc version 0.10.7
  "use strict";
  var $foreign = PS["Main"];
  var Prelude = PS["Prelude"];
  var QRCode = PS["QRCode"];
  var Data_Maybe = PS["Data.Maybe"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Function = PS["Data.Function"];
  var Data_Semigroup = PS["Data.Semigroup"];        
  var main = function __do() {
      Control_Monad_Eff_Console.log("writing...")();
      return QRCode.toCanvas({
          canvas: $foreign.theCanvas, 
          qrString: "asdf", 
          handle: function (mE) {
              if (mE instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Eff_Console.log("no error");
              };
              if (mE instanceof Data_Maybe.Just) {
                  return Control_Monad_Eff_Console.log("error: " + mE.value0);
              };
              throw new Error("Failed pattern match at Main line 20, column 22 - line 22, column 40: " + [ mE.constructor.name ]);
          }
      })();
  };
  exports["main"] = main;
  exports["theCanvas"] = $foreign.theCanvas;
})(PS["Main"] = PS["Main"] || {});
PS["Main"].main();
